apply plugin: 'com.android.library'
// 这里添加下面两行代码。
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
  compileSdkVersion 24
  buildToolsVersion "25.0.0"
  resourcePrefix "less_" //这里随便填

  defaultConfig {
    //      applicationId "com.yanzhenjie.andserver.sample" // 这一行要删除，因为library不允许有applicationId。
    minSdkVersion 15
    targetSdkVersion 24
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}
dependencies {
  // 如果你的library有依赖别的jar，这里要把jar依赖进来。
  compile fileTree(dir: 'libs', include: ['*.jar'])
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  compile 'com.android.support:appcompat-v7:25.0.1'
  testCompile 'junit:junit:4.12'
}


tasks.withType(Javadoc) {
  options.encoding = "UTF-8"
}


// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
// 组织ID。
def orgId = properties.getProperty("bintray.orgId")
//maven库的名字
def mavenName = properties.getProperty("bintray.mavenName")
//maven库的名字
def pojName = properties.getProperty("bintray.pojName")
//lib项目版本
def pojVersion = properties.getProperty("bintray.pojVersion")
//项目的主页  这个是说明，可随便填
def siteUrl = properties.getProperty("project.siteUrl")
// Git仓库的url  这个是说明，可随便填
def gitUrl = properties.getProperty("project.gitUrl")
// 唯一包名，比如compile 'com.jihf.androidutils:utils:1.0.1'中的com.jihf.androidutils就是这里配置的。
def pkgName = properties.getProperty("project.pkgName")
// 开发者的id。
def devId = properties.getProperty("devId")
// 开发者名字
def devName = properties.getProperty("devName")
// 开发者邮箱。
def devMail = properties.getProperty("devMail")
// Bintray的用户名。
def userName = properties.getProperty("bintray.userName")
// Bintray刚才保存的ApiKey。
def apiKey = properties.getProperty("bintray.apiKey")
version = pojVersion
group = pkgName // 唯一包名，比如compile 'com.jihf.androidutils:utils:1.0.1'中的com.jihf.androidutils就是这里配置的。

install {
  repositories.mavenInstaller {
    // 生成pom.xml和参数
    pom {
      project {
        packaging 'aar'
        // 项目描述，复制我的话，这里需要修改。
        name 'Utils Code For Android' // 可选，项目名称。
        description 'this is a tool code for Android dev' // 可选，项目描述。
        url siteUrl // 项目主页，这里是引用上面定义好。

        // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        //填写开发者基本信息，复制我的，这里需要修改。
        developers {
          developer {
            id devId // 开发者的id。
            name devName // 开发者名字。
            email devMail // 开发者邮箱。
          }
        }

        // SCM，复制我的，这里不需要修改。
        scm {
          connection gitUrl // Git仓库地址。
          developerConnection gitUrl // Git仓库地址。
          url siteUrl // 项目主页。
        }
      }
    }
  }
}
// 生成jar包的task，不需要修改。
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}
// 生成jarDoc的task，不需要修改。
task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  // destinationDir = file("../javadoc/")
  failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}
// 生成javaDoc的jar，不需要修改。
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}
artifacts {
  archives javadocJar
  archives sourcesJar
}

bintray {
  user = userName // Bintray的用户名。
  key = apiKey // Bintray刚才保存的ApiKey。

  configurations = ['archives']
  pkg {
    repo = mavenName // 上传到maven库。
    name = "AndoridUtils" // 发布到Bintray上的项目名字，这里的名字不是compile 'com.yanzhenjie:andserver:1.0.1'中的andserver。
    userOrg = orgId // Bintray的组织ID
    websiteUrl = siteUrl
    vcsUrl = gitUrl
    licenses = ["Apache-2.0"]
    publish = true // 是否是公开项目。
  }
}